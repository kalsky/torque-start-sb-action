name: 'Start Torque Sandbox'
description: 'Starts a sandbox in Torque and returns its details'
author: 'Quali'
inputs:
  space:
    description: 'The Torque space to start the sandbox in'
    required: true
  blueprint_name:
    description: 'The name of the Blueprint to use'
    required: true
  sandbox_name:
    description: 'Provide a name for the Sandbox'
    required: false
  torque_token:
    description: 'A Torque longterm token'
    required: true
  torque_alt_url:
    description: 'A Torque alternative url'
    required: false
  torque_account:
    required: false
    description: 'Your Torque account name. The account name is equal to your subdomain in the Torque URL.'
  branch:
    description: 'Use the Blueprint version from a remote Git branch'
    required: false
  duration:
    description: 'The Sandbox will automatically de-provision at the end of the provided duration (minutes)'
    required: false
    default: '120'
  timeout:
    description: 'Set the time (minutes) to wait for the sandbox to become active. When setting to 0 the action will end with just the sandbox ID output.'
    required: false
    default: '0'
  artifacts:
    required: false
    description: 'A comma-separated list of artifacts per application. Example: appName1=path1, appName2=path2'
  inputs:
    required: false
    description: 'A comma-separated list of key=value pairs. For example: key1=value1, key2=value2'

outputs:
  sandbox_id:
    description: 'The ID of launched Torque Sandbox'
    value: ${{ steps.start-sandbox.outputs.sandbox_id }}
  sandbox_shortcuts:
    description: 'Json with applications links. Format {app1:link1,..,appN:linkN}'
    value: ${{ steps.wait-sandbox.outputs.sandbox_shortcuts }}
  sandbox_details:
    description: 'The Full sandbox details in a json format'
    value: ${{ steps.wait-sandbox.outputs.sandbox_details }}

runs:
  using: "composite"
  steps:
    - id: start-sandbox
      run: |
        if [ -n "${{ inputs.sandbox_name }}" ]; then
          sb_name="${{ inputs.sandbox_name }}"
        else
          sb_name="${{ inputs.blueprint_name }}-build-${{ github.run_number }}"
        fi

        echo "Provided blueprint name: ${{ inputs.blueprint_name }}"
        echo "Sandbox name: ${sb_name}"
        echo "Space: ${{ inputs.space }}"

        #Run start command
        python3 ${{ github.action_path }}/start.py "${{ inputs.blueprint_name }}" "$sb_name" "${{ inputs.duration }}" \
          "${{ inputs.branch }}" "${{ inputs.inputs }}" "${{ inputs.artifacts }}"
      env:
        TORQUE_SPACE: ${{ inputs.space }}
        TORQUE_TOKEN: ${{ inputs.torque_token }}
        TORQUE_ACCOUNT: ${{ inputs.torque_account }}
        TORQUE_ALT_URL: ${{ inputs.torque_alt_url }}
      shell: bash
          
    - id: wait-sandbox
      run: |
        sandbox=${{ steps.start-sandbox.outputs.sandbox_id }}
        timeout=${{ inputs.timeout }}

        echo "Sandbox ID to wait: ${sandbox}"
        echo "Minutes to wait: ${timeout}"

        if [ "$timeout" = "0" ]; then
          echo "No need to wait"
        else 
          #Run wait command
          python3 ${{ github.action_path }}/wait.py "$sandbox" "$timeout"
        fi
      shell: bash
      env:
        TORQUE_SPACE: ${{ inputs.space }}
        TORQUE_TOKEN: ${{ inputs.torque_token }}
        TORQUE_ALT_URL: ${{ inputs.torque_alt_url }}
        
branding:
  icon: 'play-circle'  
  color: 'blue'
